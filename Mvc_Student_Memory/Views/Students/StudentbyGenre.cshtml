@model IEnumerable<Mvc_Student_Memory.Models.Student>
@using Mvc_Student_Memory.Models

@{
    /**/

    ViewBag.Title = "StudentsByGenre";
}

<h2>StudentsByGenre</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @*@Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })*@
        @Html.Label("Gender", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EnumDropDownListFor(model => model.Gender, "Select", new { @class = "form-control" })*@
            @Html.DropDownList("Gender", EnumHelper.GetSelectList(typeof(Gender)) ,"Select", new { @class = "form-control" , @required = "required"})
            @Html.ValidationMessage("Gender", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Fetch" class="btn btn-default" />
        </div>
    </div>
}

@if (Model != null && Model.Count() == 0)
{
    <span>No student found</span>
}
@if (Model != null && Model.Count() > 0)
{

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.StudentId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateOfBirth)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.StudentId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOfBirth)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.StudentId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.StudentId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.StudentId })
                </td>
            </tr>
        }

    </table>

}